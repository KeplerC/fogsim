version: '3'

services:
  meta_simulator:
    build:
      context: .
      dockerfile: meta_simulator/Dockerfile
    ports:
      - "5000:5000"
    restart: unless-stopped
    networks:
      - cloudsim_network
    volumes:
      - ./meta_simulator:/app/meta_simulator
      - ./protos:/app/protos

  simulator_adaptor:
    build:
      context: .
      dockerfile: simulator_adaptor/Dockerfile
    depends_on:
      - meta_simulator
    restart: unless-stopped
    networks:
      - cloudsim_network
      - simulator_ros_network
    environment:
      - ROS_DOMAIN_ID=1  # Simulator domain
      - META_SIMULATOR_URL=http://meta_simulator:5000
      - ADAPTOR_ID=simulator_adaptor_1
      - ALGORITHM_ADAPTOR_ID=algorithm_adaptor_1  # Add algorithm adaptor ID
      - USE_WILDCARD_DESTINATIONS=true  # Enable wildcards for more flexible message routing
      - PYTHONPATH=/app
      - POLL_INTERVAL=0.5  # Polling rate in seconds
      - TOPIC_DISCOVERY_INTERVAL=5.0  # Topic discovery interval in seconds
    volumes:
      - ./simulator_adaptor:/app/simulator_adaptor
      - ./protos:/app/protos

  algorithm_adaptor:
    build:
      context: .
      dockerfile: algorithm_adaptor/Dockerfile
    depends_on:
      - meta_simulator
    restart: unless-stopped
    networks:
      - cloudsim_network
      - algorithm_ros_network
    environment:
      - ROS_DOMAIN_ID=2  # Algorithm domain
      - META_SIMULATOR_URL=http://meta_simulator:5000
      - ADAPTOR_ID=algorithm_adaptor_1
      - SIMULATOR_ADAPTOR_ID=simulator_adaptor_1  # Add simulator adaptor ID
      - USE_WILDCARD_DESTINATIONS=true  # Enable wildcards for more flexible message routing
      - PYTHONPATH=/app
      - POLL_INTERVAL=0.5  # Polling rate in seconds
      - TOPIC_DISCOVERY_INTERVAL=5.0  # Topic discovery interval in seconds
    volumes:
      - ./algorithm_adaptor:/app/algorithm_adaptor
      - ./protos:/app/protos

  network_simulator_adaptor:
    build:
      context: .
      dockerfile: network_simulator_adaptor/Dockerfile
    depends_on:
      - meta_simulator
    restart: unless-stopped
    networks:
      - cloudsim_network
    environment:
      - META_SIMULATOR_URL=http://meta_simulator:5000
      - ADAPTOR_ID=network_simulator_adaptor
      - NETWORK_SIMULATOR_TYPE=simple
      - PYTHONPATH=/app
      - POLL_INTERVAL=0.5  # Polling rate in seconds
    volumes:
      - ./network_simulator_adaptor:/app/network_simulator_adaptor
      - ./protos:/app/protos

  # Example simulator for testing
  example_simulator:
    build:
      context: .
      dockerfile: simulator_adaptor/Dockerfile  # Reuse the ROS image
    networks:
      - simulator_ros_network
    environment:
      - ROS_DOMAIN_ID=1  # Same domain as simulator_adaptor
    volumes:
      - ./example_simulator:/app/example_simulator
    command: ["python3", "/app/example_simulator/setup_test_topics.py"]
    depends_on:
      - simulator_adaptor

  # Example algorithm for testing
  example_algorithm:
    build:
      context: .
      dockerfile: algorithm_adaptor/Dockerfile  # Reuse the ROS image
    networks:
      - algorithm_ros_network
    environment:
      - ROS_DOMAIN_ID=2  # Same domain as algorithm_adaptor
    volumes:
      - ./example_simulator:/app/example_simulator  # Reuse the same script for simplicity
    command: ["python3", "/app/example_simulator/setup_test_topics.py"]
    depends_on:
      - algorithm_adaptor

networks:
  cloudsim_network:
    driver: bridge
  simulator_ros_network:
    driver: bridge
  algorithm_ros_network:
    driver: bridge 